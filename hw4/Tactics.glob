DIGEST 3ba9566af3daf8fe6252d1a52e61d4f8
FTactics
R53:56 Poly <> <> lib
prf 867:872 <> silly1
R894:896 Coq.Init.Datatypes <> nat ind
R947:949 Coq.Init.Logic <> :type_scope:x_'='_x not
R942:942 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R944:944 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R946:946 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R945:945 Tactics <> o var
R943:943 Tactics <> n var
R950:950 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R952:952 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R954:954 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R953:953 Tactics <> p var
R951:951 Tactics <> m var
R925:927 Coq.Init.Logic <> :type_scope:x_'='_x not
R920:920 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R922:922 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R924:924 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R923:923 Tactics <> o var
R921:921 Tactics <> n var
R928:928 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R930:930 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R932:932 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R931:931 Tactics <> p var
R929:929 Tactics <> n var
R906:908 Coq.Init.Logic <> :type_scope:x_'='_x not
R905:905 Tactics <> n var
R909:909 Tactics <> m var
prf 1490:1495 <> silly2
R1517:1519 Coq.Init.Datatypes <> nat ind
R1601:1603 Coq.Init.Logic <> :type_scope:x_'='_x not
R1596:1596 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1598:1598 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1600:1600 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1599:1599 Tactics <> o var
R1597:1597 Tactics <> n var
R1604:1604 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1606:1606 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1608:1608 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1607:1607 Tactics <> p var
R1605:1605 Tactics <> m var
R1558:1560 Coq.Init.Datatypes <> nat ind
R1578:1580 Coq.Init.Logic <> :type_scope:x_'='_x not
R1573:1573 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1575:1575 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1577:1577 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1576:1576 Tactics <> o var
R1574:1574 Tactics <> q var
R1581:1581 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1583:1583 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1585:1585 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1584:1584 Tactics <> p var
R1582:1582 Tactics <> r var
R1565:1567 Coq.Init.Logic <> :type_scope:x_'='_x not
R1564:1564 Tactics <> q var
R1568:1568 Tactics <> r var
R1529:1531 Coq.Init.Logic <> :type_scope:x_'='_x not
R1528:1528 Tactics <> n var
R1532:1532 Tactics <> m var
prf 2275:2281 <> silly2a
R2299:2301 Coq.Init.Datatypes <> nat ind
R2393:2395 Coq.Init.Logic <> :type_scope:x_'='_x not
R2390:2390 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2392:2392 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2391:2391 Tactics <> n var
R2396:2396 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2398:2398 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2397:2397 Tactics <> m var
R2348:2350 Coq.Init.Datatypes <> nat ind
R2374:2376 Coq.Init.Logic <> :type_scope:x_'='_x not
R2371:2371 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2373:2373 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2372:2372 Tactics <> q var
R2377:2377 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2379:2379 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2378:2378 Tactics <> r var
R2359:2361 Coq.Init.Logic <> :type_scope:x_'='_x not
R2354:2354 Poly <> ::'('_x_','_x_')' not
R2356:2356 Poly <> ::'('_x_','_x_')' not
R2358:2358 Poly <> ::'('_x_','_x_')' not
R2355:2355 Tactics <> q var
R2357:2357 Tactics <> q var
R2362:2362 Poly <> ::'('_x_','_x_')' not
R2364:2364 Poly <> ::'('_x_','_x_')' not
R2366:2366 Poly <> ::'('_x_','_x_')' not
R2363:2363 Tactics <> r var
R2365:2365 Tactics <> r var
R2315:2317 Coq.Init.Logic <> :type_scope:x_'='_x not
R2310:2310 Poly <> ::'('_x_','_x_')' not
R2312:2312 Poly <> ::'('_x_','_x_')' not
R2314:2314 Poly <> ::'('_x_','_x_')' not
R2311:2311 Tactics <> n var
R2313:2313 Tactics <> n var
R2318:2318 Poly <> ::'('_x_','_x_')' not
R2320:2320 Poly <> ::'('_x_','_x_')' not
R2322:2322 Poly <> ::'('_x_','_x_')' not
R2319:2319 Tactics <> m var
R2321:2321 Tactics <> m var
prf 2581:2588 <> silly_ex
R2682:2684 Coq.Init.Logic <> :type_scope:x_'='_x not
R2676:2679 Basics <> oddb def
R2685:2688 Basics <> true constr
R2660:2662 Coq.Init.Logic <> :type_scope:x_'='_x not
R2653:2657 Basics <> evenb def
R2663:2666 Basics <> true constr
R2636:2638 Coq.Init.Logic <> :type_scope:x_'='_x not
R2626:2629 Basics <> oddb def
R2632:2632 Coq.Init.Datatypes <> S constr
R2634:2634 Tactics <> n var
R2639:2642 Basics <> true constr
R2615:2617 Coq.Init.Logic <> :type_scope:x_'='_x not
R2608:2612 Basics <> evenb def
R2614:2614 Tactics <> n var
R2618:2621 Basics <> true constr
prf 2999:3013 <> silly3_firsttry
R3029:3031 Coq.Init.Datatypes <> nat ind
R3087:3089 Coq.Init.Logic <> :type_scope:x_'='_x not
R3068:3074 Basics <> beq_nat def
R3077:3077 Coq.Init.Datatypes <> S constr
R3080:3080 Coq.Init.Datatypes <> S constr
R3082:3082 Tactics <> n var
R3090:3093 Basics <> true constr
R3044:3046 Coq.Init.Logic <> :type_scope:x_'='_x not
R3040:3043 Basics <> true constr
R3047:3053 Basics <> beq_nat def
R3055:3055 Tactics <> n var
prf 3313:3318 <> silly3
R3334:3336 Coq.Init.Datatypes <> nat ind
R3392:3394 Coq.Init.Logic <> :type_scope:x_'='_x not
R3373:3379 Basics <> beq_nat def
R3382:3382 Coq.Init.Datatypes <> S constr
R3385:3385 Coq.Init.Datatypes <> S constr
R3387:3387 Tactics <> n var
R3395:3398 Basics <> true constr
R3349:3351 Coq.Init.Logic <> :type_scope:x_'='_x not
R3345:3348 Basics <> true constr
R3352:3358 Basics <> beq_nat def
R3360:3360 Tactics <> n var
prf 3783:3795 <> rev_exercise1
R3814:3817 Poly <> list ind
R3819:3821 Coq.Init.Datatypes <> nat ind
R3851:3853 Coq.Init.Logic <> :type_scope:x_'='_x not
R3849:3850 Tactics <> l' var
R3854:3856 Poly <> rev def
R3858:3858 Tactics <> l var
R3831:3833 Coq.Init.Logic <> :type_scope:x_'='_x not
R3830:3830 Tactics <> l var
R3834:3836 Poly <> rev def
R3838:3839 Tactics <> l' var
R3918:3931 Poly <> rev_involutive prfax
R3918:3931 Poly <> rev_involutive prfax
def 4424:4439 <> trans_eq_example
R4465:4467 Coq.Init.Datatypes <> nat ind
R4525:4527 Coq.Init.Logic <> :type_scope:x_'='_x not
R4520:4520 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4522:4522 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4524:4524 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4523:4523 Tactics <> b var
R4521:4521 Tactics <> a var
R4528:4528 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4530:4530 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4532:4532 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4531:4531 Tactics <> f var
R4529:4529 Tactics <> e var
R4503:4505 Coq.Init.Logic <> :type_scope:x_'='_x not
R4498:4498 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4500:4500 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4502:4502 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4501:4501 Tactics <> d var
R4499:4499 Tactics <> c var
R4506:4506 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4508:4508 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4510:4510 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4509:4509 Tactics <> f var
R4507:4507 Tactics <> e var
R4481:4483 Coq.Init.Logic <> :type_scope:x_'='_x not
R4476:4476 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4478:4478 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4480:4480 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4479:4479 Tactics <> b var
R4477:4477 Tactics <> a var
R4484:4484 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4486:4486 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4488:4488 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4487:4487 Tactics <> d var
R4485:4485 Tactics <> c var
prf 4789:4796 <> trans_eq
R4825:4825 Tactics <> X var
R4850:4852 Coq.Init.Logic <> :type_scope:x_'='_x not
R4849:4849 Tactics <> n var
R4853:4853 Tactics <> o var
R4841:4843 Coq.Init.Logic <> :type_scope:x_'='_x not
R4840:4840 Tactics <> m var
R4844:4844 Tactics <> o var
R4832:4834 Coq.Init.Logic <> :type_scope:x_'='_x not
R4831:4831 Tactics <> n var
R4835:4835 Tactics <> m var
def 5108:5124 <> trans_eq_example'
R5150:5152 Coq.Init.Datatypes <> nat ind
R5210:5212 Coq.Init.Logic <> :type_scope:x_'='_x not
R5205:5205 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5207:5207 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5209:5209 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5208:5208 Tactics <> b var
R5206:5206 Tactics <> a var
R5213:5213 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5215:5215 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5217:5217 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5216:5216 Tactics <> f var
R5214:5214 Tactics <> e var
R5188:5190 Coq.Init.Logic <> :type_scope:x_'='_x not
R5183:5183 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5185:5185 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5187:5187 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5186:5186 Tactics <> d var
R5184:5184 Tactics <> c var
R5191:5191 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5193:5193 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5195:5195 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5194:5194 Tactics <> f var
R5192:5192 Tactics <> e var
R5166:5168 Coq.Init.Logic <> :type_scope:x_'='_x not
R5161:5161 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5163:5163 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5165:5165 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5164:5164 Tactics <> b var
R5162:5162 Tactics <> a var
R5169:5169 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5171:5171 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5173:5173 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5172:5172 Tactics <> d var
R5170:5170 Tactics <> c var
R5688:5688 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5690:5690 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5692:5692 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5670:5677 Tactics <> trans_eq thm
R5688:5688 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5690:5690 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5692:5692 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5670:5677 Tactics <> trans_eq thm
def 6022:6038 <> trans_eq_exercise
R6060:6062 Coq.Init.Datatypes <> nat ind
R6116:6116 Coq.Init.Logic <> :type_scope:x_'='_x not
R6122:6126 Coq.Init.Logic <> :type_scope:x_'='_x not
R6137:6137 Coq.Init.Logic <> :type_scope:x_'='_x not
R6118:6120 Basics <> :nat_scope:x_'+'_x not
R6117:6117 Tactics <> n var
R6121:6121 Tactics <> p var
R6127:6134 Basics <> minustwo def
R6136:6136 Tactics <> o var
R6096:6096 Coq.Init.Logic <> :type_scope:x_'='_x not
R6102:6105 Coq.Init.Logic <> :type_scope:x_'='_x not
R6098:6100 Basics <> :nat_scope:x_'+'_x not
R6097:6097 Tactics <> n var
R6101:6101 Tactics <> p var
R6106:6106 Tactics <> m var
R6072:6075 Coq.Init.Logic <> :type_scope:x_'='_x not
R6086:6086 Coq.Init.Logic <> :type_scope:x_'='_x not
R6071:6071 Tactics <> m var
R6076:6083 Basics <> minustwo def
R6085:6085 Tactics <> o var
prf 7698:7708 <> S_injective
R7726:7728 Coq.Init.Datatypes <> nat ind
R7750:7752 Coq.Init.Logic <> :type_scope:x_'='_x not
R7749:7749 Tactics <> n var
R7753:7753 Tactics <> m var
R7737:7739 Coq.Init.Logic <> :type_scope:x_'='_x not
R7734:7734 Coq.Init.Datatypes <> S constr
R7736:7736 Tactics <> n var
R7740:7740 Coq.Init.Datatypes <> S constr
R7742:7742 Tactics <> m var
prf 8240:8252 <> inversion_ex1
R8272:8274 Coq.Init.Datatypes <> nat ind
R8304:8306 Coq.Init.Logic <> :type_scope:x_'='_x not
R8301:8301 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8303:8303 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8302:8302 Tactics <> n var
R8307:8307 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8309:8309 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8308:8308 Tactics <> m var
R8286:8288 Coq.Init.Logic <> :type_scope:x_'='_x not
R8280:8280 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8282:8283 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8285:8285 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8284:8284 Tactics <> m var
R8281:8281 Tactics <> n var
R8289:8289 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8291:8292 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8294:8294 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8293:8293 Tactics <> o var
R8290:8290 Tactics <> o var
prf 8478:8490 <> inversion_ex2
R8508:8510 Coq.Init.Datatypes <> nat ind
R8532:8534 Coq.Init.Logic <> :type_scope:x_'='_x not
R8531:8531 Tactics <> n var
R8535:8535 Tactics <> m var
R8519:8521 Coq.Init.Logic <> :type_scope:x_'='_x not
R8516:8516 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8518:8518 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8517:8517 Tactics <> n var
R8522:8522 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8524:8524 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8523:8523 Tactics <> m var
def 8657:8669 <> inversion_ex3
R8700:8700 Tactics <> X var
R8710:8713 Poly <> list ind
R8715:8715 Tactics <> X var
R8769:8771 Coq.Init.Logic <> :type_scope:x_'='_x not
R8768:8768 Tactics <> x var
R8772:8772 Tactics <> y var
R8753:8755 Coq.Init.Logic <> :type_scope:x_'='_x not
R8748:8751 Poly <> ::x_'::'_x not
R8747:8747 Tactics <> y var
R8752:8752 Tactics <> l var
R8757:8760 Poly <> ::x_'::'_x not
R8756:8756 Tactics <> x var
R8761:8761 Tactics <> j var
R8732:8734 Coq.Init.Logic <> :type_scope:x_'='_x not
R8722:8725 Poly <> ::x_'::'_x not
R8721:8721 Tactics <> x var
R8727:8730 Poly <> ::x_'::'_x not
R8726:8726 Tactics <> y var
R8731:8731 Tactics <> l var
R8736:8739 Poly <> ::x_'::'_x not
R8735:8735 Tactics <> z var
R8740:8740 Tactics <> j var
prf 9095:9101 <> f_equal
R9134:9134 Tactics <> B var
R9129:9129 Tactics <> A var
R9143:9143 Tactics <> A var
R9161:9163 Coq.Init.Logic <> :type_scope:x_'='_x not
R9158:9158 Tactics <> f var
R9160:9160 Tactics <> x var
R9164:9164 Tactics <> f var
R9166:9166 Tactics <> y var
R9150:9152 Coq.Init.Logic <> :type_scope:x_'='_x not
R9149:9149 Tactics <> x var
R9153:9153 Tactics <> y var
prf 9458:9468 <> beq_nat_0_l
R9508:9510 Coq.Init.Logic <> :type_scope:x_'='_x not
R9507:9507 Tactics <> n var
R9496:9498 Coq.Init.Logic <> :type_scope:x_'='_x not
R9485:9491 Basics <> beq_nat def
R9495:9495 Tactics <> n var
R9499:9502 Basics <> true constr
prf 10430:10442 <> inversion_ex4
R10458:10460 Coq.Init.Datatypes <> nat ind
R10484:10486 Coq.Init.Logic <> :type_scope:x_'='_x not
R10480:10482 Basics <> :nat_scope:x_'+'_x not
R10469:10471 Coq.Init.Logic <> :type_scope:x_'='_x not
R10466:10466 Coq.Init.Datatypes <> S constr
R10468:10468 Tactics <> n var
R10472:10472 Coq.Init.Datatypes <> O constr
prf 10548:10560 <> inversion_ex5
R10578:10580 Coq.Init.Datatypes <> nat ind
R10607:10609 Coq.Init.Logic <> :type_scope:x_'='_x not
R10604:10604 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R10606:10606 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R10605:10605 Tactics <> n var
R10610:10610 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R10612:10612 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R10611:10611 Tactics <> m var
R10591:10593 Coq.Init.Logic <> :type_scope:x_'='_x not
R10586:10590 Basics <> false constr
R10594:10597 Basics <> true constr
def 11091:11103 <> inversion_ex6
R11160:11160 Tactics <> X var
R11170:11173 Poly <> list ind
R11175:11175 Tactics <> X var
R11225:11227 Coq.Init.Logic <> :type_scope:x_'='_x not
R11224:11224 Tactics <> x var
R11228:11228 Tactics <> z var
R11209:11211 Coq.Init.Logic <> :type_scope:x_'='_x not
R11204:11207 Poly <> ::x_'::'_x not
R11203:11203 Tactics <> y var
R11208:11208 Tactics <> l var
R11213:11216 Poly <> ::x_'::'_x not
R11212:11212 Tactics <> z var
R11217:11217 Tactics <> j var
R11192:11194 Coq.Init.Logic <> :type_scope:x_'='_x not
R11182:11185 Poly <> ::x_'::'_x not
R11181:11181 Tactics <> x var
R11187:11190 Poly <> ::x_'::'_x not
R11186:11186 Tactics <> y var
R11191:11191 Tactics <> l var
R11195:11196 Poly <> ::'['_']' not
prf 12505:12509 <> S_inj
R12527:12529 Coq.Init.Datatypes <> nat ind
R12537:12540 Basics <> bool ind
R12593:12595 Coq.Init.Logic <> :type_scope:x_'='_x not
R12582:12588 Basics <> beq_nat def
R12592:12592 Tactics <> m var
R12590:12590 Tactics <> n var
R12596:12596 Tactics <> b var
R12568:12570 Coq.Init.Logic <> :type_scope:x_'='_x not
R12549:12555 Basics <> beq_nat def
R12564:12564 Coq.Init.Datatypes <> S constr
R12566:12566 Tactics <> m var
R12558:12558 Coq.Init.Datatypes <> S constr
R12560:12560 Tactics <> n var
R12571:12571 Tactics <> b var
prf 13434:13440 <> silly3'
R13456:13458 Coq.Init.Datatypes <> nat ind
R13549:13551 Coq.Init.Logic <> :type_scope:x_'='_x not
R13545:13548 Basics <> true constr
R13552:13558 Basics <> beq_nat def
R13561:13561 Coq.Init.Datatypes <> S constr
R13564:13564 Coq.Init.Datatypes <> S constr
R13566:13566 Tactics <> n var
R13524:13526 Coq.Init.Logic <> :type_scope:x_'='_x not
R13520:13523 Basics <> true constr
R13527:13533 Basics <> beq_nat def
R13535:13535 Tactics <> n var
R13506:13508 Coq.Init.Logic <> :type_scope:x_'='_x not
R13487:13493 Basics <> beq_nat def
R13496:13496 Coq.Init.Datatypes <> S constr
R13499:13499 Coq.Init.Datatypes <> S constr
R13501:13501 Tactics <> n var
R13509:13512 Basics <> true constr
R13476:13478 Coq.Init.Logic <> :type_scope:x_'='_x not
R13465:13471 Basics <> beq_nat def
R13473:13473 Tactics <> n var
R13479:13482 Basics <> true constr
prf 14448:14465 <> plus_n_n_injective
R14509:14511 Coq.Init.Logic <> :type_scope:x_'='_x not
R14508:14508 Tactics <> n var
R14512:14512 Tactics <> m var
R14491:14493 Coq.Init.Logic <> :type_scope:x_'='_x not
R14487:14489 Basics <> :nat_scope:x_'+'_x not
R14486:14486 Tactics <> n var
R14490:14490 Tactics <> n var
R14495:14497 Basics <> :nat_scope:x_'+'_x not
R14494:14494 Tactics <> m var
R14498:14498 Tactics <> m var
prf 15486:15508 <> double_injective_FAILED
R15558:15560 Coq.Init.Logic <> :type_scope:x_'='_x not
R15557:15557 Tactics <> n var
R15561:15561 Tactics <> m var
R15537:15539 Coq.Init.Logic <> :type_scope:x_'='_x not
R15529:15534 Induction <> double def
R15536:15536 Tactics <> n var
R15540:15545 Induction <> double def
R15547:15547 Tactics <> m var
R15842:15848 Tactics <> f_equal thm
R15842:15848 Tactics <> f_equal thm
prf 18094:18109 <> double_injective
R18159:18161 Coq.Init.Logic <> :type_scope:x_'='_x not
R18158:18158 Tactics <> n var
R18162:18162 Tactics <> m var
R18138:18140 Coq.Init.Logic <> :type_scope:x_'='_x not
R18130:18135 Induction <> double def
R18137:18137 Tactics <> n var
R18141:18146 Induction <> double def
R18148:18148 Tactics <> m var
R19035:19041 Tactics <> f_equal thm
R19035:19041 Tactics <> f_equal thm
prf 19936:19947 <> beq_nat_true
R19990:19992 Coq.Init.Logic <> :type_scope:x_'='_x not
R19989:19989 Tactics <> n var
R19993:19993 Tactics <> m var
R19978:19980 Coq.Init.Logic <> :type_scope:x_'='_x not
R19967:19973 Basics <> beq_nat def
R19977:19977 Tactics <> m var
R19975:19975 Tactics <> n var
R19981:19984 Basics <> true constr
prf 20571:20599 <> double_injective_take2_FAILED
R20649:20651 Coq.Init.Logic <> :type_scope:x_'='_x not
R20648:20648 Tactics <> n var
R20652:20652 Tactics <> m var
R20628:20630 Coq.Init.Logic <> :type_scope:x_'='_x not
R20620:20625 Induction <> double def
R20627:20627 Tactics <> n var
R20631:20636 Induction <> double def
R20638:20638 Tactics <> m var
R20933:20939 Tactics <> f_equal thm
R20933:20939 Tactics <> f_equal thm
prf 21875:21896 <> double_injective_take2
R21946:21948 Coq.Init.Logic <> :type_scope:x_'='_x not
R21945:21945 Tactics <> n var
R21949:21949 Tactics <> m var
R21925:21927 Coq.Init.Logic <> :type_scope:x_'='_x not
R21917:21922 Induction <> double def
R21924:21924 Tactics <> n var
R21928:21933 Induction <> double def
R21935:21935 Tactics <> m var
R22412:22418 Tactics <> f_equal thm
R22412:22418 Tactics <> f_equal thm
prf 24622:24632 <> beq_id_true
R24672:24674 Coq.Init.Logic <> :type_scope:x_'='_x not
R24671:24671 Tactics <> x var
R24675:24675 Tactics <> y var
R24660:24662 Coq.Init.Logic <> :type_scope:x_'='_x not
R24650:24655 Lists <> beq_id def
R24659:24659 Tactics <> y var
R24657:24657 Tactics <> x var
R24663:24666 Basics <> true constr
R24736:24738 Coq.Init.Logic <> :type_scope:x_'='_x not
R24736:24738 Coq.Init.Logic <> :type_scope:x_'='_x not
R24751:24762 Tactics <> beq_nat_true prfax
R24751:24762 Tactics <> beq_nat_true prfax
prf 24920:24939 <> nth_error_after_last
R24954:24956 Coq.Init.Datatypes <> nat ind
R24975:24978 Poly <> list ind
R24980:24980 Tactics <> X var
R25023:25025 Coq.Init.Logic <> :type_scope:x_'='_x not
R25010:25018 Poly <> nth_error def
R25022:25022 Tactics <> n var
R25020:25020 Tactics <> l var
R25026:25029 Poly <> None constr
R24997:24999 Coq.Init.Logic <> :type_scope:x_'='_x not
R24989:24994 Poly <> length def
R24996:24996 Tactics <> l var
R25000:25000 Tactics <> n var
prf 25234:25248 <> app_length_cons
R25279:25282 Poly <> list ind
R25284:25284 Tactics <> X var
R25326:25326 Tactics <> X var
R25334:25336 Coq.Init.Datatypes <> nat ind
R25403:25405 Coq.Init.Logic <> :type_scope:x_'='_x not
R25382:25382 Coq.Init.Datatypes <> S constr
R25385:25390 Poly <> length def
R25395:25398 Poly <> ::x_'++'_x not
R25393:25394 Tactics <> l1 var
R25399:25400 Tactics <> l2 var
R25406:25406 Tactics <> n var
R25369:25371 Coq.Init.Logic <> :type_scope:x_'='_x not
R25345:25350 Poly <> length def
R25355:25359 Poly <> ::x_'++'_x not
R25367:25367 Poly <> ::x_'++'_x not
R25353:25354 Tactics <> l1 var
R25361:25364 Poly <> ::x_'::'_x not
R25360:25360 Tactics <> x var
R25365:25366 Tactics <> l2 var
R25372:25372 Tactics <> n var
prf 25607:25622 <> app_length_twice
R25645:25647 Coq.Init.Datatypes <> nat ind
R25653:25656 Poly <> list ind
R25658:25658 Tactics <> X var
R25703:25705 Coq.Init.Logic <> :type_scope:x_'='_x not
R25688:25693 Poly <> length def
R25697:25700 Poly <> ::x_'++'_x not
R25696:25696 Tactics <> l var
R25701:25701 Tactics <> l var
R25707:25709 Basics <> :nat_scope:x_'+'_x not
R25706:25706 Tactics <> n var
R25710:25710 Tactics <> n var
R25675:25677 Coq.Init.Logic <> :type_scope:x_'='_x not
R25667:25672 Poly <> length def
R25674:25674 Tactics <> l var
R25678:25678 Tactics <> n var
prf 25901:25916 <> double_induction
R25938:25940 Coq.Init.Datatypes <> nat ind
R25931:25933 Coq.Init.Datatypes <> nat ind
R26091:26091 Tactics <> P var
R26095:26095 Tactics <> n var
R26093:26093 Tactics <> m var
R26059:26059 Tactics <> P var
R26068:26068 Coq.Init.Datatypes <> S constr
R26070:26070 Tactics <> n var
R26062:26062 Coq.Init.Datatypes <> S constr
R26064:26064 Tactics <> m var
R26050:26050 Tactics <> P var
R26054:26054 Tactics <> n var
R26052:26052 Tactics <> m var
R26021:26021 Tactics <> P var
R26026:26026 Coq.Init.Datatypes <> S constr
R26028:26028 Tactics <> n var
R26012:26012 Tactics <> P var
R26016:26016 Tactics <> n var
R25985:25985 Tactics <> P var
R25988:25988 Coq.Init.Datatypes <> S constr
R25990:25990 Tactics <> m var
R25976:25976 Tactics <> P var
R25978:25978 Tactics <> m var
R25954:25954 Tactics <> P var
def 26408:26413 <> square
R26421:26423 Basics <> :nat_scope:x_'*'_x not
R26420:26420 Tactics <> n var
R26424:26424 Tactics <> n var
prf 26491:26501 <> square_mult
R26531:26533 Coq.Init.Logic <> :type_scope:x_'='_x not
R26517:26522 Tactics <> square def
R26526:26528 Basics <> :nat_scope:x_'*'_x not
R26525:26525 Tactics <> n var
R26529:26529 Tactics <> m var
R26542:26544 Basics <> :nat_scope:x_'*'_x not
R26534:26539 Tactics <> square def
R26541:26541 Tactics <> n var
R26545:26550 Tactics <> square def
R26552:26552 Tactics <> m var
R26869:26874 Tactics <> square def
R27201:27210 Induction <> mult_assoc prfax
R27201:27210 Induction <> mult_assoc prfax
R27236:27238 Coq.Init.Logic <> :type_scope:x_'='_x not
R27232:27234 Basics <> :nat_scope:x_'*'_x not
R27228:27230 Basics <> :nat_scope:x_'*'_x not
R27244:27246 Basics <> :nat_scope:x_'*'_x not
R27240:27242 Basics <> :nat_scope:x_'*'_x not
R27236:27238 Coq.Init.Logic <> :type_scope:x_'='_x not
R27232:27234 Basics <> :nat_scope:x_'*'_x not
R27228:27230 Basics <> :nat_scope:x_'*'_x not
R27244:27246 Basics <> :nat_scope:x_'*'_x not
R27240:27242 Basics <> :nat_scope:x_'*'_x not
R27263:27271 Induction <> mult_comm prfax
R27263:27271 Induction <> mult_comm prfax
R27280:27289 Induction <> mult_assoc prfax
R27280:27289 Induction <> mult_assoc prfax
R27315:27324 Induction <> mult_assoc prfax
R27315:27324 Induction <> mult_assoc prfax
def 27717:27719 <> foo
R27725:27727 Coq.Init.Datatypes <> nat ind
prf 27940:27951 <> silly_fact_1
R27974:27976 Coq.Init.Logic <> :type_scope:x_'='_x not
R27970:27972 Basics <> :nat_scope:x_'+'_x not
R27965:27967 Tactics <> foo def
R27969:27969 Tactics <> m var
R27988:27990 Basics <> :nat_scope:x_'+'_x not
R27977:27979 Tactics <> foo def
R27983:27985 Basics <> :nat_scope:x_'+'_x not
R27982:27982 Tactics <> m var
def 28221:28223 <> bar
R28238:28238 Tactics <> x var
R28249:28249 Coq.Init.Datatypes <> O constr
R28260:28260 Coq.Init.Datatypes <> S constr
prf 28334:28352 <> silly_fact_2_FAILED
R28375:28377 Coq.Init.Logic <> :type_scope:x_'='_x not
R28371:28373 Basics <> :nat_scope:x_'+'_x not
R28366:28368 Tactics <> bar def
R28370:28370 Tactics <> m var
R28389:28391 Basics <> :nat_scope:x_'+'_x not
R28378:28380 Tactics <> bar def
R28384:28386 Basics <> :nat_scope:x_'+'_x not
R28383:28383 Tactics <> m var
prf 29380:29391 <> silly_fact_2
R29414:29416 Coq.Init.Logic <> :type_scope:x_'='_x not
R29410:29412 Basics <> :nat_scope:x_'+'_x not
R29405:29407 Tactics <> bar def
R29409:29409 Tactics <> m var
R29428:29430 Basics <> :nat_scope:x_'+'_x not
R29417:29419 Tactics <> bar def
R29423:29425 Basics <> :nat_scope:x_'+'_x not
R29422:29422 Tactics <> m var
prf 29781:29793 <> silly_fact_2'
R29816:29818 Coq.Init.Logic <> :type_scope:x_'='_x not
R29812:29814 Basics <> :nat_scope:x_'+'_x not
R29807:29809 Tactics <> bar def
R29811:29811 Tactics <> m var
R29830:29832 Basics <> :nat_scope:x_'+'_x not
R29819:29821 Tactics <> bar def
R29825:29827 Basics <> :nat_scope:x_'+'_x not
R29824:29824 Tactics <> m var
R29864:29866 Tactics <> bar def
def 30499:30506 <> sillyfun
R30513:30515 Coq.Init.Datatypes <> nat ind
R30520:30523 Basics <> bool ind
R30533:30539 Basics <> beq_nat def
R30541:30541 Tactics <> n var
R30566:30572 Basics <> beq_nat def
R30574:30574 Tactics <> n var
R30596:30600 Basics <> false constr
R30583:30587 Basics <> false constr
R30550:30554 Basics <> false constr
prf 30612:30625 <> sillyfun_false
R30641:30643 Coq.Init.Datatypes <> nat ind
R30659:30661 Coq.Init.Logic <> :type_scope:x_'='_x not
R30649:30656 Tactics <> sillyfun def
R30658:30658 Tactics <> n var
R30662:30666 Basics <> false constr
R30695:30702 Tactics <> sillyfun def
R30717:30723 Basics <> beq_nat def
R30717:30723 Basics <> beq_nat def
R30817:30823 Basics <> beq_nat def
R30817:30823 Basics <> beq_nat def
prf 31622:31634 <> combine_split
R31654:31657 Poly <> list ind
R31661:31663 Poly <> :type_scope:x_'*'_x not
R31660:31660 Tactics <> X var
R31664:31664 Tactics <> Y var
R31714:31716 Coq.Init.Logic <> :type_scope:x_'='_x not
R31701:31707 Poly <> combine def
R31712:31713 Tactics <> l2 var
R31709:31710 Tactics <> l1 var
R31717:31717 Tactics <> l var
R31684:31686 Coq.Init.Logic <> :type_scope:x_'='_x not
R31677:31681 Poly <> split def
R31683:31683 Tactics <> l var
R31687:31687 Poly <> ::'('_x_','_x_')' not
R31690:31691 Poly <> ::'('_x_','_x_')' not
R31694:31694 Poly <> ::'('_x_','_x_')' not
R31688:31689 Tactics <> l1 var
R31692:31693 Tactics <> l2 var
def 32021:32029 <> sillyfun1
R32036:32038 Coq.Init.Datatypes <> nat ind
R32043:32046 Basics <> bool ind
R32056:32062 Basics <> beq_nat def
R32064:32064 Tactics <> n var
R32088:32094 Basics <> beq_nat def
R32096:32096 Tactics <> n var
R32117:32121 Basics <> false constr
R32105:32108 Basics <> true constr
R32073:32076 Basics <> true constr
prf 32380:32399 <> sillyfun1_odd_FAILED
R32415:32417 Coq.Init.Datatypes <> nat ind
R32459:32461 Coq.Init.Logic <> :type_scope:x_'='_x not
R32453:32456 Basics <> oddb def
R32458:32458 Tactics <> n var
R32462:32465 Basics <> true constr
R32437:32439 Coq.Init.Logic <> :type_scope:x_'='_x not
R32426:32434 Tactics <> sillyfun1 def
R32436:32436 Tactics <> n var
R32440:32443 Basics <> true constr
R32497:32505 Tactics <> sillyfun1 def
R32526:32532 Basics <> beq_nat def
R32526:32532 Basics <> beq_nat def
prf 33381:33393 <> sillyfun1_odd
R33409:33411 Coq.Init.Datatypes <> nat ind
R33453:33455 Coq.Init.Logic <> :type_scope:x_'='_x not
R33447:33450 Basics <> oddb def
R33452:33452 Tactics <> n var
R33456:33459 Basics <> true constr
R33431:33433 Coq.Init.Logic <> :type_scope:x_'='_x not
R33420:33428 Tactics <> sillyfun1 def
R33430:33430 Tactics <> n var
R33434:33437 Basics <> true constr
R33491:33499 Tactics <> sillyfun1 def
R33520:33526 Basics <> beq_nat def
R33520:33526 Basics <> beq_nat def
R33775:33786 Tactics <> beq_nat_true prfax
R33775:33786 Tactics <> beq_nat_true prfax
R34073:34079 Basics <> beq_nat def
R34073:34079 Basics <> beq_nat def
R34139:34150 Tactics <> beq_nat_true prfax
R34139:34150 Tactics <> beq_nat_true prfax
prf 34314:34335 <> bool_fn_applied_thrice
R34361:34364 Basics <> bool ind
R34353:34356 Basics <> bool ind
R34372:34375 Basics <> bool ind
R34392:34394 Coq.Init.Logic <> :type_scope:x_'='_x not
R34381:34381 Tactics <> f var
R34384:34384 Tactics <> f var
R34387:34387 Tactics <> f var
R34389:34389 Tactics <> b var
R34395:34395 Tactics <> f var
R34397:34397 Tactics <> b var
prf 36677:36687 <> beq_nat_sym
R36705:36707 Coq.Init.Datatypes <> nat ind
R36724:36726 Coq.Init.Logic <> :type_scope:x_'='_x not
R36713:36719 Basics <> beq_nat def
R36723:36723 Tactics <> m var
R36721:36721 Tactics <> n var
R36727:36733 Basics <> beq_nat def
R36737:36737 Tactics <> n var
R36735:36735 Tactics <> m var
prf 37125:37137 <> beq_nat_trans
R37216:37218 Coq.Init.Logic <> :type_scope:x_'='_x not
R37205:37211 Basics <> beq_nat def
R37215:37215 Tactics <> p var
R37213:37213 Tactics <> n var
R37219:37222 Basics <> true constr
R37192:37194 Coq.Init.Logic <> :type_scope:x_'='_x not
R37181:37187 Basics <> beq_nat def
R37191:37191 Tactics <> p var
R37189:37189 Tactics <> m var
R37195:37198 Basics <> true constr
R37168:37170 Coq.Init.Logic <> :type_scope:x_'='_x not
R37157:37163 Basics <> beq_nat def
R37167:37167 Tactics <> m var
R37165:37165 Tactics <> n var
R37171:37174 Basics <> true constr
def 37969:37991 <> split_combine_statement
R38022:38026 Basics <> admit prfax
prf 38038:38050 <> split_combine
R38054:38076 Tactics <> split_combine_statement def
prf 38296:38310 <> filter_exercise
R38345:38348 Basics <> bool ind
R38340:38340 Tactics <> X var
R38385:38385 Tactics <> X var
R38396:38399 Poly <> list ind
R38401:38401 Tactics <> X var
R38448:38450 Coq.Init.Logic <> :type_scope:x_'='_x not
R38442:38445 Tactics <> test var
R38447:38447 Tactics <> x var
R38451:38454 Basics <> true constr
R38423:38425 Coq.Init.Logic <> :type_scope:x_'='_x not
R38410:38415 Poly <> filter def
R38422:38422 Tactics <> l var
R38417:38420 Tactics <> test var
R38427:38430 Poly <> ::x_'::'_x not
R38426:38426 Tactics <> x var
R38431:38432 Tactics <> lf var
