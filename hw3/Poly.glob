DIGEST 63949c2700fa4e223a7fca0b14ad2a36
FPoly
R71:75 Lists <> <> lib
ind 932:939 <> boollist
constr 955:962 <> bool_nil
constr 979:987 <> bool_cons
R966:973 Poly <> boollist ind
R1011:1018 Poly <> boollist ind
R999:1006 Poly <> boollist ind
R991:994 Basics <> bool ind
ind 1493:1496 <> list
constr 1521:1523 <> nil
constr 1538:1541 <> cons
R1527:1530 Poly <> list ind
R1560:1563 Poly <> list ind
R1550:1553 Poly <> list ind
R2824:2826 Poly <> nil constr
R2876:2879 Poly <> cons constr
R3661:3664 Poly <> cons constr
R3673:3676 Poly <> cons constr
R3685:3687 Poly <> nil constr
R3689:3691 Coq.Init.Datatypes <> nat ind
R3678:3680 Coq.Init.Datatypes <> nat ind
R3666:3668 Coq.Init.Datatypes <> nat ind
def 4046:4051 <> length
R4065:4068 Poly <> list ind
R4070:4070 Poly <> X var
R4075:4077 Coq.Init.Datatypes <> nat ind
R4090:4090 Poly <> l var
R4101:4103 Poly <> nil constr
R4119:4122 Poly <> cons constr
R4131:4131 Coq.Init.Datatypes <> S constr
R4134:4139 Poly <> length def
R4141:4141 Poly <> X var
def 4678:4689 <> test_length1
R4743:4745 Coq.Init.Logic <> :type_scope:x_'='_x not
R4697:4702 Poly <> length def
R4709:4712 Poly <> cons constr
R4721:4724 Poly <> cons constr
R4733:4735 Poly <> nil constr
R4737:4739 Coq.Init.Datatypes <> nat ind
R4726:4728 Coq.Init.Datatypes <> nat ind
R4714:4716 Coq.Init.Datatypes <> nat ind
R4704:4706 Coq.Init.Datatypes <> nat ind
def 4900:4911 <> test_length2
R4958:4960 Coq.Init.Logic <> :type_scope:x_'='_x not
R4919:4924 Poly <> length def
R4932:4935 Poly <> cons constr
R4948:4950 Poly <> nil constr
R4952:4955 Basics <> bool ind
R4942:4945 Basics <> true constr
R4937:4940 Basics <> bool ind
R4926:4929 Basics <> bool ind
def 5112:5114 <> app
R5136:5139 Poly <> list ind
R5141:5141 Poly <> X var
R5160:5163 Poly <> list ind
R5165:5165 Poly <> X var
R5179:5180 Poly <> l1 var
R5191:5193 Poly <> nil constr
R5203:5204 Poly <> l2 var
R5210:5213 Poly <> cons constr
R5222:5225 Poly <> cons constr
R5232:5234 Poly <> app def
R5240:5241 Poly <> l2 var
R5236:5236 Poly <> X var
R5227:5227 Poly <> X var
def 5261:5263 <> rev
R5277:5280 Poly <> list ind
R5282:5282 Poly <> X var
R5287:5290 Poly <> list ind
R5292:5292 Poly <> X var
R5305:5305 Poly <> l var
R5316:5318 Poly <> nil constr
R5328:5330 Poly <> nil constr
R5332:5332 Poly <> X var
R5338:5341 Poly <> cons constr
R5350:5352 Poly <> app def
R5367:5370 Poly <> cons constr
R5377:5379 Poly <> nil constr
R5381:5381 Poly <> X var
R5372:5372 Poly <> X var
R5357:5359 Poly <> rev def
R5361:5361 Poly <> X var
R5354:5354 Poly <> X var
def 5402:5410 <> test_rev1
R5459:5464 Coq.Init.Logic <> :type_scope:x_'='_x not
R5498:5498 Coq.Init.Logic <> :type_scope:x_'='_x not
R5416:5418 Poly <> rev def
R5425:5428 Poly <> cons constr
R5437:5440 Poly <> cons constr
R5449:5451 Poly <> nil constr
R5453:5455 Coq.Init.Datatypes <> nat ind
R5442:5444 Coq.Init.Datatypes <> nat ind
R5430:5432 Coq.Init.Datatypes <> nat ind
R5420:5422 Coq.Init.Datatypes <> nat ind
R5465:5468 Poly <> cons constr
R5477:5480 Poly <> cons constr
R5489:5491 Poly <> nil constr
R5493:5495 Coq.Init.Datatypes <> nat ind
R5482:5484 Coq.Init.Datatypes <> nat ind
R5470:5472 Coq.Init.Datatypes <> nat ind
def 5536:5544 <> test_rev2
R5568:5570 Coq.Init.Logic <> :type_scope:x_'='_x not
R5549:5551 Poly <> rev def
R5559:5561 Poly <> nil constr
R5563:5566 Basics <> bool ind
R5553:5556 Basics <> bool ind
R5571:5573 Poly <> nil constr
R5575:5578 Basics <> bool ind
mod 5615:5627 <> MumbleGrumble
ind 5751:5756 MumbleGrumble mumble
constr 5772:5772 MumbleGrumble a
constr 5787:5787 MumbleGrumble b
constr 5819:5819 MumbleGrumble c
R5776:5781 Poly <> mumble ind
R5808:5813 Poly <> mumble ind
R5801:5803 Coq.Init.Datatypes <> nat ind
R5791:5796 Poly <> mumble ind
R5823:5828 Poly <> mumble ind
ind 5842:5848 MumbleGrumble grumble
constr 5873:5873 MumbleGrumble d
constr 5901:5901 MumbleGrumble e
R5887:5893 Poly <> grumble ind
R5877:5882 Poly MumbleGrumble mumble ind
R5910:5916 Poly <> grumble ind
R5930:5930 Poly MumbleGrumble b constr
R5932:5932 Poly MumbleGrumble a constr
R5945:5945 Poly MumbleGrumble d constr
R5953:5953 Poly MumbleGrumble b constr
R5955:5955 Poly MumbleGrumble a constr
R5947:5950 Basics <> bool ind
R5969:5969 Poly MumbleGrumble e constr
R5979:5979 Poly MumbleGrumble b constr
R5981:5981 Poly MumbleGrumble c constr
R5971:5976 Poly MumbleGrumble mumble ind
R5997:6000 Poly MumbleGrumble cons constr
R6018:6018 Poly MumbleGrumble d constr
R6026:6026 Poly MumbleGrumble b constr
R6028:6028 Poly MumbleGrumble a constr
R6020:6023 Basics <> bool ind
R6003:6009 Poly MumbleGrumble grumble ind
R6011:6014 Basics <> bool ind
R6036:6038 Poly MumbleGrumble nil constr
R6041:6047 Poly MumbleGrumble grumble ind
R6049:6052 Basics <> bool ind
R6064:6067 Poly MumbleGrumble cons constr
R6106:6108 Poly MumbleGrumble nil constr
R6111:6117 Poly MumbleGrumble grumble ind
R6119:6124 Poly MumbleGrumble mumble ind
R6087:6087 Poly MumbleGrumble d constr
R6097:6097 Poly MumbleGrumble b constr
R6099:6099 Poly MumbleGrumble a constr
R6089:6094 Poly MumbleGrumble mumble ind
R6070:6076 Poly MumbleGrumble grumble ind
R6078:6083 Poly MumbleGrumble mumble ind
R6137:6140 Poly MumbleGrumble cons constr
R6172:6174 Poly MumbleGrumble nil constr
R6177:6183 Poly MumbleGrumble grumble ind
R6185:6188 Basics <> bool ind
R6158:6158 Poly MumbleGrumble e constr
R6165:6168 Basics <> true constr
R6160:6163 Basics <> bool ind
R6143:6149 Poly MumbleGrumble grumble ind
R6151:6154 Basics <> bool ind
R6201:6204 Poly MumbleGrumble cons constr
R6243:6245 Poly MumbleGrumble nil constr
R6248:6254 Poly MumbleGrumble grumble ind
R6256:6261 Poly MumbleGrumble mumble ind
R6224:6224 Poly MumbleGrumble e constr
R6234:6234 Poly MumbleGrumble b constr
R6236:6236 Poly MumbleGrumble c constr
R6226:6231 Poly MumbleGrumble mumble ind
R6207:6213 Poly MumbleGrumble grumble ind
R6215:6220 Poly MumbleGrumble mumble ind
R6274:6277 Poly MumbleGrumble cons constr
R6286:6286 Poly MumbleGrumble c constr
R6279:6284 Poly MumbleGrumble mumble ind
R6290:6292 Poly MumbleGrumble nil constr
R6294:6299 Poly MumbleGrumble mumble ind
R6682:6694 Poly MumbleGrumble <> mod
def 6958:6961 <> app'
R6973:6976 Poly <> list ind
R6978:6978 Poly <> X var
R6991:6992 Poly <> l1 var
R7003:7005 Poly <> nil constr
R7015:7016 Poly <> l2 var
R7022:7025 Poly <> cons constr
R7034:7037 Poly <> cons constr
R7044:7047 Poly <> app' def
R7053:7054 Poly <> l2 var
R7049:7049 Poly <> X var
R7039:7039 Poly <> X var
R7144:7147 Poly <> app' def
R7211:7213 Poly <> app def
def 9735:9741 <> length'
R9755:9758 Poly <> list ind
R9760:9760 Poly <> X var
R9765:9767 Coq.Init.Datatypes <> nat ind
R9780:9780 Poly <> l var
R9791:9793 Poly <> nil constr
R9809:9812 Poly <> cons constr
R9821:9821 Coq.Init.Datatypes <> S constr
R9824:9830 Poly <> length' def
def 10153:10159 <> list123
R10166:10169 Poly <> cons constr
R10178:10181 Poly <> cons constr
R10190:10193 Poly <> cons constr
R10202:10204 Poly <> nil constr
R10206:10208 Coq.Init.Datatypes <> nat ind
R10195:10197 Coq.Init.Datatypes <> nat ind
R10183:10185 Coq.Init.Datatypes <> nat ind
R10171:10173 Coq.Init.Datatypes <> nat ind
def 10282:10289 <> list123'
R10296:10299 Poly <> cons constr
R10306:10309 Poly <> cons constr
R10316:10319 Poly <> cons constr
R10326:10328 Poly <> nil constr
def 10935:10944 <> list123'''
R10949:10952 Poly <> cons constr
R10959:10962 Poly <> cons constr
R10969:10972 Poly <> cons constr
R10981:10983 Poly <> nil constr
R10974:10976 Coq.Init.Datatypes <> nat ind
R11002:11004 Poly <> nil constr
R11002:11004 Poly <> nil constr
R11021:11024 Poly <> cons constr
R11021:11024 Poly <> cons constr
R11045:11050 Poly <> length def
R11045:11050 Poly <> length def
R11069:11071 Poly <> app def
R11069:11071 Poly <> app def
R11094:11096 Poly <> rev def
R11094:11096 Poly <> rev def
def 11177:11185 <> list123''
R11190:11193 Poly <> cons constr
R11198:11201 Poly <> cons constr
R11206:11209 Poly <> cons constr
R11213:11215 Poly <> nil constr
R11227:11232 Poly <> length def
R11234:11242 Poly <> list123'' def
def 11413:11420 <> length''
R11434:11437 Poly <> list ind
R11439:11439 Poly <> X var
R11444:11446 Coq.Init.Datatypes <> nat ind
R11459:11459 Poly <> l var
R11470:11472 Poly <> nil constr
R11488:11491 Poly <> cons constr
R11500:11500 Coq.Init.Datatypes <> S constr
R11503:11510 Poly <> length'' def
ind 12107:12111 <> list'
constr 12136:12139 <> nil'
constr 12153:12157 <> cons'
R12143:12147 Poly <> list' ind
R12175:12179 Poly <> list' ind
R12166:12170 Poly <> list' ind
def 12817:12821 <> mynil
R12826:12828 Poly <> nil constr
def 13395:13399 <> mynil
R13403:13406 Poly <> list ind
R13408:13410 Coq.Init.Datatypes <> nat ind
R13415:13417 Poly <> nil constr
R13546:13548 Poly <> nil constr
def 13563:13568 <> mynil'
R13574:13576 Poly <> nil constr
R13578:13580 Coq.Init.Datatypes <> nat ind
R13863:13866 Poly <> cons constr
not 13850 <> ::x_'::'_x
R13948:13950 Poly <> nil constr
not 13939 <> ::'['_']'
R13983:13986 Poly <> cons constr
R13994:13997 Poly <> cons constr
R14001:14002 Poly <> ::'['_']' not
not 13962 <> ::'['_x_';'_'..'_';'_x_']'
R14032:14034 Poly <> app def
not 14019 <> ::x_'++'_x
def 14167:14177 <> list123''''
R14182:14182 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R14184:14185 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R14187:14188 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R14190:14190 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 14524:14529 <> repeat
R14547:14547 Poly <> X var
R14559:14561 Coq.Init.Datatypes <> nat ind
R14566:14569 Poly <> list ind
R14571:14571 Poly <> X var
R14584:14588 Poly <> count var
R14603:14603 Coq.Init.Datatypes <> O constr
R14611:14613 Poly <> nil constr
R14623:14623 Coq.Init.Datatypes <> S constr
R14631:14634 Poly <> cons constr
R14639:14644 Poly <> repeat def
R14646:14646 Poly <> n var
R14636:14636 Poly <> n var
def 14669:14680 <> test_repeat1
R14698:14700 Coq.Init.Logic <> :type_scope:x_'='_x not
R14685:14690 Poly <> repeat def
R14692:14695 Basics <> true constr
R14701:14704 Poly <> cons constr
R14712:14715 Poly <> cons constr
R14722:14724 Poly <> nil constr
R14717:14720 Basics <> true constr
R14706:14709 Basics <> true constr
prf 14765:14773 <> app_nil_r
R14803:14806 Poly <> list ind
R14808:14808 Poly <> X var
R14820:14822 Coq.Init.Logic <> :type_scope:x_'='_x not
R14814:14817 Poly <> ::x_'++'_x not
R14813:14813 Poly <> l var
R14818:14819 Poly <> ::'['_']' not
R14823:14823 Poly <> l var
prf 14940:14948 <> app_assoc
R14968:14971 Poly <> list ind
R14973:14973 Poly <> A var
R14990:14992 Coq.Init.Logic <> :type_scope:x_'='_x not
R14980:14983 Poly <> ::x_'++'_x not
R14979:14979 Poly <> l var
R14985:14988 Poly <> ::x_'++'_x not
R14984:14984 Poly <> m var
R14989:14989 Poly <> n var
R14993:14993 Poly <> ::x_'++'_x not
R15000:15004 Poly <> ::x_'++'_x not
R14995:14998 Poly <> ::x_'++'_x not
R14994:14994 Poly <> l var
R14999:14999 Poly <> m var
R15005:15005 Poly <> n var
prf 15127:15136 <> app_length
R15165:15168 Poly <> list ind
R15170:15170 Poly <> X var
R15193:15195 Coq.Init.Logic <> :type_scope:x_'='_x not
R15176:15181 Poly <> length def
R15186:15189 Poly <> ::x_'++'_x not
R15184:15185 Poly <> l1 var
R15190:15191 Poly <> l2 var
R15205:15207 Basics <> :nat_scope:x_'+'_x not
R15196:15201 Poly <> length def
R15203:15204 Poly <> l1 var
R15208:15213 Poly <> length def
R15215:15216 Poly <> l2 var
prf 15335:15348 <> cons_app_equiv
R15375:15378 Poly <> list ind
R15380:15380 Poly <> X var
R15388:15388 Poly <> X var
R15398:15400 Coq.Init.Logic <> :type_scope:x_'='_x not
R15395:15396 Poly <> ::x_'::'_x not
R15394:15394 Poly <> x var
R15397:15397 Poly <> l var
R15404:15407 Poly <> ::x_'++'_x not
R15401:15401 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R15403:15403 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R15402:15402 Poly <> x var
R15408:15408 Poly <> l var
prf 15659:15666 <> app_r_id
R15698:15701 Poly <> list ind
R15703:15703 Poly <> X var
R15715:15717 Coq.Init.Logic <> :type_scope:x_'='_x not
R15709:15712 Poly <> ::x_'++'_x not
R15708:15708 Poly <> l var
R15713:15714 Poly <> ::'['_']' not
R15718:15718 Poly <> l var
prf 15854:15866 <> rev_app_distr
R15887:15890 Poly <> list ind
R15892:15892 Poly <> X var
R15912:15914 Coq.Init.Logic <> :type_scope:x_'='_x not
R15898:15900 Poly <> rev def
R15905:15908 Poly <> ::x_'++'_x not
R15903:15904 Poly <> l1 var
R15909:15910 Poly <> l2 var
R15921:15924 Poly <> ::x_'++'_x not
R15915:15917 Poly <> rev def
R15919:15920 Poly <> l2 var
R15925:15927 Poly <> rev def
R15929:15930 Poly <> l1 var
R15996:16004 Poly <> app_nil_r thm
R15996:16004 Poly <> app_nil_r thm
R16061:16069 Poly <> app_assoc thm
R16061:16069 Poly <> app_assoc thm
prf 16102:16115 <> rev_involutive
R16147:16150 Poly <> list ind
R16152:16152 Poly <> X var
R16168:16170 Coq.Init.Logic <> :type_scope:x_'='_x not
R16157:16159 Poly <> rev def
R16162:16164 Poly <> rev def
R16166:16166 Poly <> l var
R16171:16171 Poly <> l var
R16258:16270 Poly <> rev_app_distr thm
R16258:16270 Poly <> rev_app_distr thm
ind 16596:16599 <> prod
constr 16626:16629 <> pair
R16643:16646 Poly <> prod ind
R16664:16667 Poly <> pair constr
R16664:16667 Poly <> pair constr
R16814:16817 Poly <> pair constr
not 16798 <> ::'('_x_','_x_')'
R16953:16956 Poly <> prod ind
not 16941 <> :type_scope:x_'*'_x
def 17555:17557 <> fst
R17578:17580 Poly <> :type_scope:x_'*'_x not
R17577:17577 Poly <> X var
R17581:17581 Poly <> Y var
R17586:17586 Poly <> X var
R17599:17599 Poly <> p var
R17610:17610 Poly <> ::'('_x_','_x_')' not
R17612:17613 Poly <> ::'('_x_','_x_')' not
R17615:17615 Poly <> ::'('_x_','_x_')' not
def 17641:17643 <> snd
R17664:17666 Poly <> :type_scope:x_'*'_x not
R17663:17663 Poly <> X var
R17667:17667 Poly <> Y var
R17672:17672 Poly <> Y var
R17685:17685 Poly <> p var
R17696:17696 Poly <> ::'('_x_','_x_')' not
R17698:17699 Poly <> ::'('_x_','_x_')' not
R17701:17701 Poly <> ::'('_x_','_x_')' not
def 17948:17954 <> combine
R17975:17978 Poly <> list ind
R17980:17980 Poly <> X var
R17989:17992 Poly <> list ind
R17994:17994 Poly <> Y var
R18010:18013 Poly <> list ind
R18017:18017 Poly <> :type_scope:x_'*'_x not
R18016:18016 Poly <> X var
R18018:18018 Poly <> Y var
R18035:18036 Poly <> ly var
R18031:18032 Poly <> lx var
R18047:18048 Poly <> ::'['_']' not
R18056:18057 Poly <> ::'['_']' not
R18066:18067 Poly <> ::'['_']' not
R18072:18073 Poly <> ::'['_']' not
R18080:18083 Poly <> ::x_'::'_x not
R18089:18092 Poly <> ::x_'::'_x not
R18105:18109 Poly <> ::x_'::'_x not
R18123:18123 Poly <> ::x_'::'_x not
R18099:18099 Poly <> ::'('_x_','_x_')' not
R18101:18102 Poly <> ::'('_x_','_x_')' not
R18104:18104 Poly <> ::'('_x_','_x_')' not
R18110:18116 Poly <> combine def
def 19227:19231 <> split
R19251:19254 Poly <> list ind
R19258:19260 Poly <> :type_scope:x_'*'_x not
R19257:19257 Poly <> X var
R19261:19261 Poly <> Y var
R19267:19267 Poly <> :type_scope:x_'*'_x not
R19274:19278 Poly <> :type_scope:x_'*'_x not
R19285:19285 Poly <> :type_scope:x_'*'_x not
R19268:19271 Poly <> list ind
R19273:19273 Poly <> X var
R19279:19282 Poly <> list ind
R19284:19284 Poly <> Y var
R19298:19298 Poly <> l var
R19311:19312 Poly <> ::'['_']' not
R19325:19325 Poly <> ::'('_x_','_x_')' not
R19328:19329 Poly <> ::'('_x_','_x_')' not
R19332:19332 Poly <> ::'('_x_','_x_')' not
R19326:19327 Poly <> ::'['_']' not
R19330:19331 Poly <> ::'['_']' not
R19346:19347 Poly <> ::x_'::'_x not
R19340:19340 Poly <> ::'('_x_','_x_')' not
R19342:19343 Poly <> ::'('_x_','_x_')' not
R19345:19345 Poly <> ::'('_x_','_x_')' not
R19366:19370 Poly <> split def
R19378:19378 Poly <> ::'('_x_','_x_')' not
R19391:19393 Poly <> ::'('_x_','_x_')' not
R19406:19407 Poly <> ::'('_x_','_x_')' not
R19380:19382 Poly <> ::x_'::'_x not
R19390:19390 Poly <> ::x_'::'_x not
R19383:19385 Poly <> fst def
R19387:19389 Poly <> l'' var
R19395:19397 Poly <> ::x_'::'_x not
R19405:19405 Poly <> ::x_'::'_x not
R19398:19400 Poly <> snd def
R19402:19404 Poly <> l'' var
def 19426:19435 <> test_split
R19467:19469 Coq.Init.Logic <> :type_scope:x_'='_x not
R19440:19444 Poly <> split def
R19446:19446 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19456:19456 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19466:19466 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19457:19457 Poly <> ::'('_x_','_x_')' not
R19459:19459 Poly <> ::'('_x_','_x_')' not
R19465:19465 Poly <> ::'('_x_','_x_')' not
R19460:19464 Basics <> false constr
R19447:19447 Poly <> ::'('_x_','_x_')' not
R19449:19449 Poly <> ::'('_x_','_x_')' not
R19455:19455 Poly <> ::'('_x_','_x_')' not
R19450:19454 Basics <> false constr
R19470:19470 Poly <> ::'('_x_','_x_')' not
R19476:19476 Poly <> ::'('_x_','_x_')' not
R19490:19490 Poly <> ::'('_x_','_x_')' not
R19471:19471 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19473:19473 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19475:19475 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19477:19477 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19483:19483 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19489:19489 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19484:19488 Basics <> false constr
R19478:19482 Basics <> false constr
ind 19747:19752 <> option
constr 19777:19780 <> Some
constr 19802:19805 <> None
R19789:19794 Poly <> option ind
R19809:19814 Poly <> option ind
R19830:19833 Poly <> Some constr
R19830:19833 Poly <> Some constr
R19852:19855 Poly <> None constr
R19852:19855 Poly <> None constr
def 19969:19977 <> nth_error
R19995:19998 Poly <> list ind
R20000:20000 Poly <> X var
R20008:20010 Coq.Init.Datatypes <> nat ind
R20034:20039 Poly <> option ind
R20041:20041 Poly <> X var
R20054:20054 Poly <> l var
R20065:20066 Poly <> ::'['_']' not
R20071:20074 Poly <> None constr
R20081:20084 Poly <> ::x_'::'_x not
R20094:20100 Basics <> beq_nat def
R20104:20104 Coq.Init.Datatypes <> O constr
R20102:20102 Poly <> n var
R20123:20131 Poly <> nth_error def
R20137:20140 Coq.Init.Peano <> pred def
R20142:20142 Poly <> n var
R20111:20114 Poly <> Some constr
def 20161:20175 <> test_nth_error1
R20200:20202 Coq.Init.Logic <> :type_scope:x_'='_x not
R20179:20187 Poly <> nth_error def
R20189:20189 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20191:20191 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20193:20193 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20195:20195 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20197:20197 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20203:20206 Poly <> Some constr
def 20245:20259 <> test_nth_error2
R20284:20286 Coq.Init.Logic <> :type_scope:x_'='_x not
R20263:20271 Poly <> nth_error def
R20273:20273 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20277:20277 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20281:20281 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20278:20278 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20280:20280 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20274:20274 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20276:20276 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20287:20290 Poly <> Some constr
R20292:20292 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20294:20294 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 20331:20345 <> test_nth_error3
R20367:20369 Coq.Init.Logic <> :type_scope:x_'='_x not
R20349:20357 Poly <> nth_error def
R20359:20359 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20364:20364 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20360:20363 Basics <> true constr
R20370:20373 Poly <> None constr
def 20629:20636 <> hd_error
R20654:20657 Poly <> list ind
R20659:20659 Poly <> X var
R20664:20669 Poly <> option ind
R20671:20671 Poly <> X var
R20684:20684 Poly <> l var
R20695:20697 Poly <> nil constr
R20706:20709 Poly <> None constr
R20716:20719 Poly <> ::x_'::'_x not
R20726:20729 Poly <> Some constr
R20886:20893 Poly <> hd_error def
def 20905:20918 <> test_hd_error1
R20936:20938 Coq.Init.Logic <> :type_scope:x_'='_x not
R20922:20929 Poly <> hd_error def
R20931:20931 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20933:20933 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20935:20935 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20939:20942 Poly <> Some constr
def 20982:20995 <> test_hd_error2
R21018:21021 Coq.Init.Logic <> :type_scope:x_'='_x not
R20999:21006 Poly <> hd_error def
R21009:21009 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21013:21013 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21017:21017 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21014:21014 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21016:21016 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21010:21010 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21012:21012 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21022:21025 Poly <> Some constr
R21027:21027 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21029:21029 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 21685:21694 <> doit3times
R21711:21711 Poly <> X var
R21708:21708 Poly <> X var
R21717:21717 Poly <> X var
R21722:21722 Poly <> X var
R21729:21729 Poly <> f var
R21732:21732 Poly <> f var
R21735:21735 Poly <> f var
R21737:21737 Poly <> n var
R21896:21905 Poly <> doit3times def
def 21977:21991 <> test_doit3times
R22015:22017 Coq.Init.Logic <> :type_scope:x_'='_x not
R21994:22003 Poly <> doit3times def
R22005:22012 Basics <> minustwo def
def 22056:22071 <> test_doit3times'
R22094:22096 Coq.Init.Logic <> :type_scope:x_'='_x not
R22074:22083 Poly <> doit3times def
R22090:22093 Basics <> true constr
R22085:22088 Basics <> negb def
R22097:22101 Basics <> false constr
def 22481:22486 <> filter
R22507:22510 Basics <> bool ind
R22504:22504 Poly <> X var
R22516:22519 Poly <> list ind
R22521:22521 Poly <> X var
R22543:22546 Poly <> list ind
R22548:22548 Poly <> X var
R22562:22562 Poly <> l var
R22573:22574 Poly <> ::'['_']' not
R22583:22584 Poly <> ::'['_']' not
R22591:22594 Poly <> ::x_'::'_x not
R22603:22606 Poly <> test var
R22671:22676 Poly <> filter def
R22678:22681 Poly <> test var
R22616:22620 Poly <> ::x_'::'_x not
R22634:22634 Poly <> ::x_'::'_x not
R22621:22626 Poly <> filter def
R22628:22631 Poly <> test var
def 22862:22873 <> test_filter1
R22898:22900 Coq.Init.Logic <> :type_scope:x_'='_x not
R22876:22881 Poly <> filter def
R22889:22889 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22891:22891 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22893:22893 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22895:22895 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22897:22897 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22883:22887 Basics <> evenb def
R22901:22901 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22903:22903 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22905:22905 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 22946:22956 <> length_is_1
R22974:22977 Poly <> list ind
R22979:22979 Poly <> X var
R22984:22987 Basics <> bool ind
R22994:23000 Basics <> beq_nat def
R23003:23008 Poly <> length def
R23010:23010 Poly <> l var
def 23025:23036 <> test_filter2
R23111:23115 Coq.Init.Logic <> :type_scope:x_'='_x not
R23043:23048 Poly <> filter def
R23073:23074 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23081:23082 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23086:23087 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23091:23092 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23100:23101 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23104:23105 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23109:23110 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23106:23106 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23108:23108 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23102:23103 Poly <> ::'['_']' not
R23093:23093 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23095:23095 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23097:23097 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23099:23099 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23088:23088 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23090:23090 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23083:23083 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23085:23085 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23075:23075 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23077:23078 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23080:23080 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23050:23060 Poly <> length_is_1 def
R23116:23117 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23121:23122 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23126:23127 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23131:23132 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23128:23128 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23130:23130 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23123:23123 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23125:23125 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23118:23118 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23120:23120 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 23292:23307 <> countoddmembers'
R23312:23315 Poly <> list ind
R23317:23319 Coq.Init.Datatypes <> nat ind
R23324:23326 Coq.Init.Datatypes <> nat ind
R23333:23338 Poly <> length def
R23341:23346 Poly <> filter def
R23353:23353 Poly <> l var
R23348:23351 Basics <> oddb def
def 23366:23387 <> test_countoddmembers'1
R23422:23424 Coq.Init.Logic <> :type_scope:x_'='_x not
R23392:23407 Poly <> countoddmembers' def
R23409:23409 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23411:23411 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23413:23413 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23415:23415 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23417:23417 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23419:23419 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23421:23421 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 23462:23483 <> test_countoddmembers'2
R23512:23514 Coq.Init.Logic <> :type_scope:x_'='_x not
R23488:23503 Poly <> countoddmembers' def
R23505:23505 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23507:23507 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23509:23509 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23511:23511 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 23552:23573 <> test_countoddmembers'3
R23598:23600 Coq.Init.Logic <> :type_scope:x_'='_x not
R23578:23593 Poly <> countoddmembers' def
R23595:23597 Poly <> nil constr
def 24368:24381 <> test_anon_fun'
R24415:24417 Coq.Init.Logic <> :type_scope:x_'='_x not
R24386:24395 Poly <> doit3times def
R24408:24410 Basics <> :nat_scope:x_'*'_x not
R24407:24407 Poly <> n var
R24411:24411 Poly <> n var
def 24658:24670 <> test_filter2'
R24765:24769 Coq.Init.Logic <> :type_scope:x_'='_x not
R24677:24682 Poly <> filter def
R24727:24728 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24735:24736 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24740:24741 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24745:24746 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24754:24755 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24758:24759 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24763:24764 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24760:24760 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24762:24762 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24756:24757 Poly <> ::'['_']' not
R24747:24747 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24749:24749 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24751:24751 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24753:24753 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24742:24742 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24744:24744 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24737:24737 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24739:24739 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24729:24729 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24731:24732 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24734:24734 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24694:24700 Basics <> beq_nat def
R24703:24708 Poly <> length def
R24710:24710 Poly <> l var
R24770:24771 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24775:24776 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24780:24781 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24785:24786 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24782:24782 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24784:24784 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24777:24777 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24779:24779 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24772:24772 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24774:24774 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 25089:25095 <> bgt_nat
R25104:25106 Coq.Init.Datatypes <> nat ind
R25111:25114 Basics <> bool ind
R25137:25140 Basics <> ::x_'&&'_x not
R25119:25122 Basics <> negb def
R25125:25131 Basics <> blt_nat def
R25135:25135 Poly <> m var
R25133:25133 Poly <> n var
R25141:25144 Basics <> negb def
R25147:25153 Basics <> beq_nat def
R25157:25157 Poly <> m var
R25155:25155 Poly <> n var
def 25173:25187 <> filter_even_gt7
R25194:25197 Poly <> list ind
R25199:25201 Coq.Init.Datatypes <> nat ind
R25206:25209 Poly <> list ind
R25211:25213 Coq.Init.Datatypes <> nat ind
R25220:25225 Poly <> filter def
R25261:25261 Poly <> l var
R25244:25247 Basics <> ::x_'&&'_x not
R25237:25241 Basics <> evenb def
R25243:25243 Poly <> x var
R25248:25254 Poly <> bgt_nat def
R25256:25256 Poly <> x var
def 25274:25295 <> test_filter_even_gt7_1
R25336:25338 Coq.Init.Logic <> :type_scope:x_'='_x not
R25301:25315 Poly <> filter_even_gt7 def
R25317:25317 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25319:25319 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25321:25321 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25323:25323 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25325:25325 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25328:25328 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25330:25330 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25333:25333 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25335:25335 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25339:25339 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25342:25342 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25345:25345 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25347:25347 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 25385:25406 <> test_filter_even_gt7_2
R25442:25444 Coq.Init.Logic <> :type_scope:x_'='_x not
R25412:25426 Poly <> filter_even_gt7 def
R25428:25428 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25430:25430 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25432:25432 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25434:25434 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25437:25437 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25441:25441 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25445:25446 Poly <> ::'['_']' not
R26084:26089 Poly <> filter def
R26097:26097 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26099:26099 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26101:26101 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26103:26103 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26091:26095 Basics <> evenb def
def 26119:26127 <> partition
R26174:26177 Basics <> bool ind
R26169:26169 Poly <> X var
R26206:26209 Poly <> list ind
R26211:26211 Poly <> X var
R26241:26243 Poly <> :type_scope:x_'*'_x not
R26235:26238 Poly <> list ind
R26240:26240 Poly <> X var
R26244:26247 Poly <> list ind
R26249:26249 Poly <> X var
R26256:26256 Poly <> ::'('_x_','_x_')' not
R26270:26271 Poly <> ::'('_x_','_x_')' not
R26305:26305 Poly <> ::'('_x_','_x_')' not
R26257:26262 Poly <> filter def
R26269:26269 Poly <> l var
R26264:26267 Poly <> test var
R26272:26277 Poly <> filter def
R26304:26304 Poly <> l var
R26289:26292 Basics <> negb def
R26295:26298 Poly <> test var
R26300:26300 Poly <> x var
def 26318:26332 <> test_partition1
R26361:26363 Coq.Init.Logic <> :type_scope:x_'='_x not
R26335:26343 Poly <> partition def
R26350:26350 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26352:26352 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26354:26354 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26356:26356 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26358:26358 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26360:26360 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26345:26348 Basics <> oddb def
R26364:26364 Poly <> ::'('_x_','_x_')' not
R26372:26373 Poly <> ::'('_x_','_x_')' not
R26379:26379 Poly <> ::'('_x_','_x_')' not
R26365:26365 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26367:26367 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26369:26369 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26371:26371 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26374:26374 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26376:26376 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26378:26378 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 26417:26431 <> test_partition2
R26468:26470 Coq.Init.Logic <> :type_scope:x_'='_x not
R26434:26442 Poly <> partition def
R26461:26461 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26463:26463 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26465:26465 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26467:26467 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26454:26458 Basics <> false constr
R26471:26471 Poly <> ::'('_x_','_x_')' not
R26474:26475 Poly <> ::'('_x_','_x_')' not
R26483:26483 Poly <> ::'('_x_','_x_')' not
R26472:26473 Poly <> ::'['_']' not
R26476:26476 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26478:26478 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26480:26480 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26482:26482 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 26659:26661 <> map
R26680:26680 Poly <> Y var
R26677:26677 Poly <> X var
R26686:26689 Poly <> list ind
R26691:26691 Poly <> X var
R26697:26700 Poly <> list ind
R26702:26702 Poly <> Y var
R26716:26716 Poly <> l var
R26727:26728 Poly <> ::'['_']' not
R26737:26738 Poly <> ::'['_']' not
R26745:26748 Poly <> ::x_'::'_x not
R26754:26754 Poly <> ::x_'::'_x not
R26758:26763 Poly <> ::x_'::'_x not
R26771:26771 Poly <> ::x_'::'_x not
R26755:26755 Poly <> f var
R26764:26766 Poly <> map def
R26768:26768 Poly <> f var
def 26988:26996 <> test_map1
R27019:27021 Coq.Init.Logic <> :type_scope:x_'='_x not
R26999:27001 Poly <> map def
R27012:27012 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27014:27014 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27016:27016 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27018:27018 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27004:27007 Coq.Init.Peano <> plus def
R27022:27022 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27024:27024 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27026:27026 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27028:27028 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 27322:27330 <> test_map2
R27353:27355 Coq.Init.Logic <> :type_scope:x_'='_x not
R27335:27337 Poly <> map def
R27344:27344 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27346:27346 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27348:27348 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27350:27350 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27352:27352 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27339:27342 Basics <> oddb def
R27356:27356 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27362:27362 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27367:27367 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27373:27373 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27378:27378 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27374:27377 Basics <> true constr
R27368:27372 Basics <> false constr
R27363:27366 Basics <> true constr
R27357:27361 Basics <> false constr
def 27567:27575 <> test_map3
R27623:27627 Coq.Init.Logic <> :type_scope:x_'='_x not
R27582:27584 Poly <> map def
R27614:27614 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27616:27616 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27618:27618 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27620:27620 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27622:27622 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27596:27596 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27604:27604 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27611:27611 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27605:27608 Basics <> oddb def
R27610:27610 Poly <> n var
R27597:27601 Basics <> evenb def
R27603:27603 Poly <> n var
R27628:27628 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27641:27641 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27654:27654 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27667:27667 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27680:27680 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27668:27668 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27674:27674 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27679:27679 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27675:27678 Basics <> true constr
R27669:27673 Basics <> false constr
R27655:27655 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27660:27660 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27666:27666 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27661:27665 Basics <> false constr
R27656:27659 Basics <> true constr
R27642:27642 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27648:27648 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27653:27653 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27649:27652 Basics <> true constr
R27643:27647 Basics <> false constr
R27629:27629 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27634:27634 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27640:27640 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27635:27639 Basics <> false constr
R27630:27633 Basics <> true constr
prf 27874:27886 <> distr_map_app
R27920:27920 Poly <> Y var
R27915:27915 Poly <> X var
R27932:27935 Poly <> list ind
R27937:27937 Poly <> X var
R27959:27961 Coq.Init.Logic <> :type_scope:x_'='_x not
R27943:27945 Poly <> map def
R27952:27955 Poly <> ::x_'++'_x not
R27950:27951 Poly <> l1 var
R27956:27957 Poly <> l2 var
R27947:27947 Poly <> f var
R27970:27973 Poly <> ::x_'++'_x not
R27962:27964 Poly <> map def
R27968:27969 Poly <> l1 var
R27966:27966 Poly <> f var
R27974:27976 Poly <> map def
R27980:27981 Poly <> l2 var
R27978:27978 Poly <> f var
prf 28132:28138 <> map_rev
R28172:28172 Poly <> Y var
R28167:28167 Poly <> X var
R28180:28183 Poly <> list ind
R28185:28185 Poly <> X var
R28204:28206 Coq.Init.Logic <> :type_scope:x_'='_x not
R28191:28193 Poly <> map def
R28198:28200 Poly <> rev def
R28202:28202 Poly <> l var
R28195:28195 Poly <> f var
R28207:28209 Poly <> rev def
R28212:28214 Poly <> map def
R28218:28218 Poly <> l var
R28216:28216 Poly <> f var
R28310:28322 Poly <> distr_map_app thm
R28310:28322 Poly <> distr_map_app thm
def 28833:28836 <> join
R28853:28856 Poly <> list ind
R28859:28862 Poly <> list ind
R28864:28864 Poly <> X var
R28870:28873 Poly <> list ind
R28875:28875 Poly <> X var
R28888:28888 Poly <> l var
R28898:28899 Poly <> ::'['_']' not
R28907:28908 Poly <> ::'['_']' not
R28914:28915 Poly <> ::x_'::'_x not
R28923:28926 Poly <> ::x_'++'_x not
R28927:28930 Poly <> join def
def 28964:28971 <> flat_map
R28992:28995 Poly <> list ind
R28997:28997 Poly <> Y var
R28987:28987 Poly <> X var
R29003:29006 Poly <> list ind
R29008:29008 Poly <> X var
R29033:29036 Poly <> list ind
R29038:29038 Poly <> Y var
R29044:29047 Poly <> join def
R29050:29052 Poly <> map def
R29056:29056 Poly <> l var
R29054:29054 Poly <> f var
def 29071:29084 <> test_flat_map1
R29124:29128 Coq.Init.Logic <> :type_scope:x_'='_x not
R29089:29096 Poly <> flat_map def
R29117:29117 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29119:29119 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29121:29121 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29123:29123 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29108:29108 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29110:29110 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29112:29112 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29114:29114 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29113:29113 Poly <> n var
R29111:29111 Poly <> n var
R29109:29109 Poly <> n var
R29129:29129 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29131:29132 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29134:29135 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29137:29138 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29140:29141 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29143:29144 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29146:29147 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29149:29150 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29152:29153 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29155:29155 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 29347:29356 <> option_map
R29381:29381 Poly <> Y var
R29376:29376 Poly <> X var
R29390:29395 Poly <> option ind
R29397:29397 Poly <> X var
R29424:29429 Poly <> option ind
R29431:29431 Poly <> Y var
R29444:29445 Poly <> xo var
R29458:29461 Poly <> None constr
R29468:29471 Poly <> None constr
R29479:29482 Poly <> Some constr
R29489:29492 Poly <> Some constr
R29495:29495 Poly <> f var
def 30318:30321 <> fold
R30344:30344 Poly <> Y var
R30341:30341 Poly <> Y var
R30338:30338 Poly <> X var
R30350:30353 Poly <> list ind
R30355:30355 Poly <> X var
R30361:30361 Poly <> Y var
R30391:30391 Poly <> Y var
R30404:30404 Poly <> l var
R30415:30417 Poly <> nil constr
R30425:30425 Poly <> b var
R30432:30435 Poly <> ::x_'::'_x not
R30441:30441 Poly <> f var
R30446:30449 Poly <> fold def
R30455:30455 Poly <> b var
R30451:30451 Poly <> f var
R30918:30921 Poly <> fold def
R30923:30926 Basics <> andb def
def 30988:31000 <> fold_example1
R31027:31029 Coq.Init.Logic <> :type_scope:x_'='_x not
R31006:31009 Poly <> fold def
R31016:31016 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31018:31018 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31020:31020 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31022:31022 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31024:31024 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31011:31014 Coq.Init.Peano <> mult def
def 31068:31080 <> fold_example2
R31123:31125 Coq.Init.Logic <> :type_scope:x_'='_x not
R31086:31089 Poly <> fold def
R31119:31122 Basics <> true constr
R31096:31096 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31101:31101 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31106:31106 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31112:31112 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31117:31117 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31113:31116 Basics <> true constr
R31107:31111 Basics <> false constr
R31102:31105 Basics <> true constr
R31097:31100 Basics <> true constr
R31091:31094 Basics <> andb def
R31126:31130 Basics <> false constr
def 31167:31179 <> fold_example3
R31216:31218 Coq.Init.Logic <> :type_scope:x_'='_x not
R31185:31188 Poly <> fold def
R31214:31215 Poly <> ::'['_']' not
R31195:31195 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31199:31199 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31202:31202 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31208:31208 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31212:31212 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31209:31209 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31211:31211 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31203:31203 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31205:31205 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31207:31207 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31200:31201 Poly <> ::'['_']' not
R31196:31196 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31198:31198 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31190:31192 Poly <> app def
R31219:31219 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31221:31221 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31223:31223 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31225:31225 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R31227:31227 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 32305:32312 <> constfun
R32328:32328 Poly <> X var
R32338:32338 Poly <> X var
R32333:32335 Coq.Init.Datatypes <> nat ind
R32352:32354 Coq.Init.Datatypes <> nat ind
R32360:32360 Poly <> x var
def 32375:32379 <> ftrue
R32384:32391 Poly <> constfun def
R32393:32396 Basics <> true constr
def 32408:32424 <> constfun_example1
R32435:32437 Coq.Init.Logic <> :type_scope:x_'='_x not
R32428:32432 Poly <> ftrue def
R32438:32441 Basics <> true constr
def 32478:32494 <> constfun_example2
R32513:32515 Coq.Init.Logic <> :type_scope:x_'='_x not
R32499:32506 Poly <> constfun def
R32717:32720 Coq.Init.Peano <> plus def
def 33331:33335 <> plus3
R33340:33343 Coq.Init.Peano <> plus def
R33354:33358 Poly <> plus3 def
def 33370:33379 <> test_plus3
R33393:33395 Coq.Init.Logic <> :type_scope:x_'='_x not
R33386:33390 Poly <> plus3 def
def 33433:33443 <> test_plus3'
R33467:33469 Coq.Init.Logic <> :type_scope:x_'='_x not
R33449:33458 Poly <> doit3times def
R33460:33464 Poly <> plus3 def
def 33507:33518 <> test_plus3''
R33544:33546 Coq.Init.Logic <> :type_scope:x_'='_x not
R33523:33532 Poly <> doit3times def
R33535:33538 Coq.Init.Peano <> plus def
mod 33675:33683 <> Exercises
def 33885:33895 Exercises fold_length
R33913:33916 Poly Exercises list ind
R33918:33918 Poly <> X var
R33923:33925 Coq.Init.Datatypes <> nat ind
R33932:33935 Poly Exercises fold def
R33954:33954 Poly <> l var
R33949:33949 Coq.Init.Datatypes <> S constr
R33951:33951 Poly <> n var
def 33969:33985 Exercises test_fold_length1
R34008:34010 Coq.Init.Logic <> :type_scope:x_'='_x not
R33989:33999 Poly Exercises fold_length def
R34001:34001 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R34003:34003 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R34005:34005 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R34007:34007 Poly <> ::'['_x_';'_'..'_';'_x_']' not
prf 34094:34105 Exercises fold_len_nil
R34132:34135 Poly Exercises list ind
R34137:34137 Poly <> X var
R34166:34168 Coq.Init.Logic <> :type_scope:x_'='_x not
R34153:34163 Poly Exercises fold_length def
R34165:34165 Poly <> l var
R34144:34146 Coq.Init.Logic <> :type_scope:x_'='_x not
R34143:34143 Poly <> l var
R34147:34148 Poly <> ::'['_']' not
R34241:34251 Poly Exercises fold_length def
prf 34288:34301 Exercises fold_len_distr
R34332:34335 Poly Exercises list ind
R34337:34337 Poly <> X var
R34365:34367 Coq.Init.Logic <> :type_scope:x_'='_x not
R34343:34353 Poly Exercises fold_length def
R34358:34361 Poly <> ::x_'++'_x not
R34356:34357 Poly <> l1 var
R34362:34363 Poly <> l2 var
R34382:34384 Basics <> :nat_scope:x_'+'_x not
R34368:34378 Poly Exercises fold_length def
R34380:34381 Poly <> l1 var
R34385:34395 Poly Exercises fold_length def
R34397:34398 Poly <> l2 var
R34497:34507 Poly Exercises fold_length def
prf 34567:34585 Exercises fold_length_correct
R34603:34606 Poly Exercises list ind
R34608:34608 Poly <> X var
R34627:34629 Coq.Init.Logic <> :type_scope:x_'='_x not
R34614:34624 Poly Exercises fold_length def
R34626:34626 Poly <> l var
R34630:34635 Poly Exercises length def
R34637:34637 Poly <> l var
R34714:34727 Poly Exercises cons_app_equiv thm
R34714:34727 Poly Exercises cons_app_equiv thm
R34741:34754 Poly Exercises fold_len_distr thm
R34741:34754 Poly Exercises fold_len_distr thm
def 35012:35019 Exercises fold_map
R35042:35042 Poly <> Y var
R35037:35037 Poly <> X var
R35050:35053 Poly Exercises list ind
R35055:35055 Poly <> X var
R35060:35063 Poly Exercises list ind
R35065:35065 Poly <> Y var
R35072:35075 Poly Exercises fold def
R35103:35104 Poly <> ::'['_']' not
R35101:35101 Poly <> l var
R35093:35096 Poly <> ::x_'::'_x not
R35090:35090 Poly <> f var
R35092:35092 Poly <> x var
R35097:35098 Poly <> xs var
prf 35225:35240 Exercises fold_map_correct
R35274:35274 Poly <> Y var
R35269:35269 Poly <> X var
R35282:35285 Poly Exercises list ind
R35287:35287 Poly <> X var
R35305:35307 Coq.Init.Logic <> :type_scope:x_'='_x not
R35293:35300 Poly Exercises fold_map def
R35304:35304 Poly <> l var
R35302:35302 Poly <> f var
R35308:35310 Poly Exercises map def
R35314:35314 Poly <> l var
R35312:35312 Poly <> f var
R35387:35394 Poly Exercises fold_map def
def 36246:36255 Exercises prod_curry
R36288:36288 Poly <> Z var
R36280:36282 Poly <> :type_scope:x_'*'_x not
R36279:36279 Poly <> X var
R36283:36283 Poly <> Y var
R36296:36296 Poly <> X var
R36304:36304 Poly <> Y var
R36309:36309 Poly <> Z var
R36314:36314 Poly <> f var
R36316:36316 Poly <> ::'('_x_','_x_')' not
R36318:36319 Poly <> ::'('_x_','_x_')' not
R36321:36321 Poly <> ::'('_x_','_x_')' not
R36317:36317 Poly <> x var
R36320:36320 Poly <> y var
def 36466:36477 Exercises prod_uncurry
R36511:36511 Poly <> Z var
R36506:36506 Poly <> Y var
R36501:36501 Poly <> X var
R36520:36522 Poly <> :type_scope:x_'*'_x not
R36519:36519 Poly <> X var
R36523:36523 Poly <> Y var
R36528:36528 Poly <> Z var
R36539:36539 Poly <> p var
R36552:36552 Poly <> ::'('_x_','_x_')' not
R36554:36554 Poly <> ::'('_x_','_x_')' not
R36556:36556 Poly <> ::'('_x_','_x_')' not
R36561:36561 Poly <> f var
R36731:36740 Poly Exercises prod_curry def
R36750:36761 Poly Exercises prod_uncurry def
prf 36773:36785 Exercises uncurry_curry
R36850:36850 Poly <> Z var
R36845:36845 Poly <> Y var
R36840:36840 Poly <> X var
R36915:36917 Coq.Init.Logic <> :type_scope:x_'='_x not
R36884:36893 Poly Exercises prod_curry def
R36914:36914 Poly <> y var
R36912:36912 Poly <> x var
R36896:36907 Poly Exercises prod_uncurry def
R36909:36909 Poly <> f var
R36918:36918 Poly <> f var
R36922:36922 Poly <> y var
R36920:36920 Poly <> x var
R36963:36972 Poly Exercises prod_curry def
R36975:36986 Poly Exercises prod_uncurry def
prf 37018:37030 Exercises curry_uncurry
R37096:37096 Poly <> Z var
R37087:37089 Poly <> :type_scope:x_'*'_x not
R37086:37086 Poly <> X var
R37090:37090 Poly <> Y var
R37105:37107 Poly <> :type_scope:x_'*'_x not
R37104:37104 Poly <> X var
R37108:37108 Poly <> Y var
R37143:37145 Coq.Init.Logic <> :type_scope:x_'='_x not
R37114:37125 Poly Exercises prod_uncurry def
R37142:37142 Poly <> p var
R37128:37137 Poly Exercises prod_curry def
R37139:37139 Poly <> f var
R37146:37146 Poly <> f var
R37148:37148 Poly <> p var
R37199:37210 Poly Exercises prod_uncurry def
R37213:37222 Poly Exercises prod_curry def
def 37257:37258 Exercises ls
R37263:37263 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R37265:37265 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R37267:37267 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R37269:37269 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R37282:37290 Poly Exercises nth_error def
R37300:37305 Poly Exercises length def
R37307:37308 Poly Exercises ls def
R37296:37297 Poly Exercises ls def
R37292:37294 Coq.Init.Datatypes <> nat ind
mod 39615:39620 <> Exercises.Church
def 39636:39638 Exercises.Church nat
R39677:39677 Poly <> X var
R39672:39672 Poly <> X var
R39666:39666 Poly <> X var
R39661:39661 Poly <> X var
def 39833:39835 Exercises.Church one
R39839:39841 Poly Exercises.Church nat def
R39873:39873 Poly <> X var
R39868:39868 Poly <> X var
R39881:39881 Poly <> X var
R39887:39887 Poly <> f var
R39889:39889 Poly <> x var
def 39969:39971 Exercises.Church two
R39975:39977 Poly Exercises.Church nat def
R40009:40009 Poly <> X var
R40004:40004 Poly <> X var
R40017:40017 Poly <> X var
R40023:40023 Poly <> f var
R40026:40026 Poly <> f var
R40028:40028 Poly <> x var
def 40207:40210 Exercises.Church zero
R40214:40216 Poly Exercises.Church nat def
R40248:40248 Poly <> X var
R40243:40243 Poly <> X var
R40256:40256 Poly <> X var
R40262:40262 Poly <> x var
def 40537:40541 Exercises.Church three
R40545:40547 Poly Exercises.Church nat def
R40553:40562 Poly Exercises.Church doit3times def
def 40816:40819 Exercises.Church succ
R40826:40828 Poly Exercises.Church nat def
R40833:40835 Poly Exercises.Church nat def
R40867:40867 Poly <> X var
R40862:40862 Poly <> X var
R40875:40875 Poly <> X var
R40883:40883 Poly <> f var
R40886:40886 Poly <> n var
R40892:40892 Poly <> x var
R40890:40890 Poly <> f var
R40888:40888 Poly <> X var
def 40906:40911 Exercises.Church succ_1
R40924:40926 Coq.Init.Logic <> :type_scope:x_'='_x not
R40915:40918 Poly Exercises.Church succ def
R40920:40923 Poly Exercises.Church zero def
R40927:40929 Poly Exercises.Church one def
def 40969:40974 Exercises.Church succ_2
R40986:40988 Coq.Init.Logic <> :type_scope:x_'='_x not
R40978:40981 Poly Exercises.Church succ def
R40983:40985 Poly Exercises.Church one def
R40989:40991 Poly Exercises.Church two def
def 41029:41034 Exercises.Church succ_3
R41046:41048 Coq.Init.Logic <> :type_scope:x_'='_x not
R41038:41041 Poly Exercises.Church succ def
R41043:41045 Poly Exercises.Church two def
R41049:41053 Poly Exercises.Church three def
def 41135:41138 Exercises.Church plus
R41147:41149 Poly Exercises.Church nat def
R41154:41156 Poly Exercises.Church nat def
R41188:41188 Poly <> X var
R41183:41183 Poly <> X var
R41196:41196 Poly <> X var
R41204:41204 Poly <> n var
R41211:41211 Poly <> m var
R41217:41217 Poly <> x var
R41215:41215 Poly <> f var
R41213:41213 Poly <> X var
R41208:41208 Poly <> f var
R41206:41206 Poly <> X var
def 41231:41236 Exercises.Church plus_1
R41253:41255 Coq.Init.Logic <> :type_scope:x_'='_x not
R41240:41243 Poly Exercises.Church plus def
R41250:41252 Poly Exercises.Church one def
R41245:41248 Poly Exercises.Church zero def
R41256:41258 Poly Exercises.Church one def
def 41295:41300 Exercises.Church plus_2
R41318:41320 Coq.Init.Logic <> :type_scope:x_'='_x not
R41304:41307 Poly Exercises.Church plus def
R41313:41317 Poly Exercises.Church three def
R41309:41311 Poly Exercises.Church two def
R41321:41324 Poly Exercises.Church plus def
R41332:41334 Poly Exercises.Church two def
R41326:41330 Poly Exercises.Church three def
def 41371:41376 Exercises.Church plus_3
R41407:41409 Coq.Init.Logic <> :type_scope:x_'='_x not
R41382:41385 Poly Exercises.Church plus def
R41402:41406 Poly Exercises.Church three def
R41388:41391 Poly Exercises.Church plus def
R41397:41399 Poly Exercises.Church two def
R41393:41395 Poly Exercises.Church two def
R41410:41413 Poly Exercises.Church plus def
R41420:41423 Poly Exercises.Church plus def
R41431:41435 Poly Exercises.Church three def
R41425:41429 Poly Exercises.Church three def
R41415:41417 Poly Exercises.Church one def
def 41473:41478 Exercises.Church plus_4
R41495:41497 Coq.Init.Logic <> :type_scope:x_'='_x not
R41482:41485 Poly Exercises.Church plus def
R41491:41494 Poly Exercises.Church zero def
R41487:41489 Poly Exercises.Church one def
R41498:41500 Poly Exercises.Church one def
def 41565:41568 Exercises.Church mult
R41577:41579 Poly Exercises.Church nat def
R41584:41586 Poly Exercises.Church nat def
R41618:41618 Poly <> X var
R41613:41613 Poly <> X var
R41626:41626 Poly <> X var
R41634:41634 Poly <> m var
R41646:41646 Poly <> x var
R41639:41639 Poly <> n var
R41643:41643 Poly <> f var
R41641:41641 Poly <> X var
R41636:41636 Poly <> X var
def 41658:41663 Exercises.Church mult_1
R41679:41681 Coq.Init.Logic <> :type_scope:x_'='_x not
R41667:41670 Poly Exercises.Church mult def
R41676:41678 Poly Exercises.Church one def
R41672:41674 Poly Exercises.Church one def
R41682:41684 Poly Exercises.Church one def
def 41742:41747 Exercises.Church mult_2
R41779:41781 Coq.Init.Logic <> :type_scope:x_'='_x not
R41751:41754 Poly Exercises.Church mult def
R41762:41765 Poly Exercises.Church plus def
R41773:41777 Poly Exercises.Church three def
R41767:41771 Poly Exercises.Church three def
R41756:41759 Poly Exercises.Church zero def
R41782:41785 Poly Exercises.Church zero def
def 41822:41827 Exercises.Church mult_3
R41845:41847 Coq.Init.Logic <> :type_scope:x_'='_x not
R41831:41834 Poly Exercises.Church mult def
R41840:41844 Poly Exercises.Church three def
R41836:41838 Poly Exercises.Church two def
R41848:41851 Poly Exercises.Church plus def
R41859:41863 Poly Exercises.Church three def
R41853:41857 Poly Exercises.Church three def
def 41900:41905 Exercises.Church mult_4
R41923:41925 Coq.Init.Logic <> :type_scope:x_'='_x not
R41909:41912 Poly Exercises.Church mult def
R41920:41922 Poly Exercises.Church two def
R41914:41918 Poly Exercises.Church three def
R41926:41929 Poly Exercises.Church plus def
R41937:41941 Poly Exercises.Church three def
R41931:41935 Poly Exercises.Church three def
def 41993:41998 Exercises.Church mult_5
R42016:42018 Coq.Init.Logic <> :type_scope:x_'='_x not
R42002:42005 Poly Exercises.Church mult def
R42013:42015 Poly Exercises.Church one def
R42007:42011 Poly Exercises.Church three def
R42019:42023 Poly Exercises.Church three def
def 42074:42079 Exercises.Church mult_6
R42097:42099 Coq.Init.Logic <> :type_scope:x_'='_x not
R42083:42086 Poly Exercises.Church mult def
R42092:42096 Poly Exercises.Church three def
R42088:42090 Poly Exercises.Church one def
R42100:42104 Poly Exercises.Church three def
def 42163:42168 Exercises.Church mult_7
R42200:42202 Coq.Init.Logic <> :type_scope:x_'='_x not
R42172:42175 Poly Exercises.Church mult def
R42196:42199 Poly Exercises.Church zero def
R42178:42181 Poly Exercises.Church plus def
R42189:42193 Poly Exercises.Church three def
R42183:42187 Poly Exercises.Church three def
R42203:42206 Poly Exercises.Church zero def
def 42860:42860 Exercises.Church m
R42865:42867 Poly Exercises.Church two def
def 42881:42881 Exercises.Church n
R42886:42890 Poly Exercises.Church three def
def 42904:42904 Exercises.Church X
R42923:42923 Poly Exercises.Church m def
R42931:42931 Poly Exercises.Church X def
R42926:42926 Poly Exercises.Church X def
R42943:42943 Poly Exercises.Church n def
R42945:42945 Poly Exercises.Church X def
R42956:42956 Poly Exercises.Church m def
R42968:42968 Poly Exercises.Church n def
R42970:42970 Poly Exercises.Church X def
R42964:42964 Poly Exercises.Church X def
R42959:42959 Poly Exercises.Church X def
def 42988:42990 Exercises.Church exp
R42999:43001 Poly Exercises.Church nat def
R43006:43008 Poly Exercises.Church nat def
R43040:43040 Poly <> X var
R43035:43035 Poly <> X var
R43048:43048 Poly <> X var
R43057:43057 Poly <> m var
R43069:43069 Poly <> n var
R43071:43071 Poly <> X var
R43065:43065 Poly <> X var
R43060:43060 Poly <> X var
R43077:43077 Poly <> x var
R43075:43075 Poly <> f var
def 43090:43094 Exercises.Church exp_1
R43109:43111 Coq.Init.Logic <> :type_scope:x_'='_x not
R43098:43100 Poly Exercises.Church exp def
R43106:43108 Poly Exercises.Church two def
R43102:43104 Poly Exercises.Church two def
R43112:43115 Poly Exercises.Church plus def
R43121:43123 Poly Exercises.Church two def
R43117:43119 Poly Exercises.Church two def
R43143:43145 Poly Exercises.Church exp def
R43148:43151 Poly Exercises.Church plus def
R43163:43165 Poly Exercises.Church two def
R43168:43171 Poly Exercises.Church mult def
R43174:43176 Poly Exercises.Church one def
def 43210:43214 Exercises.Church exp_2
R43231:43233 Coq.Init.Logic <> :type_scope:x_'='_x not
R43218:43220 Poly Exercises.Church exp def
R43228:43230 Poly Exercises.Church two def
R43222:43226 Poly Exercises.Church three def
R43234:43237 Poly Exercises.Church plus def
R43265:43267 Poly Exercises.Church one def
R43240:43243 Poly Exercises.Church mult def
R43250:43253 Poly Exercises.Church mult def
R43259:43261 Poly Exercises.Church two def
R43255:43257 Poly Exercises.Church two def
R43245:43247 Poly Exercises.Church two def
R43286:43288 Poly Exercises.Church exp def
R43291:43295 Poly Exercises.Church three def
R43298:43300 Poly Exercises.Church two def
R43303:43305 Poly Exercises.Church one def
R43317:43326 Poly Exercises.Church doit3times def
R43329:43332 Poly Exercises.Church mult def
R43335:43338 Poly Exercises.Church plus def
def 43371:43375 Exercises.Church exp_3
R43393:43395 Coq.Init.Logic <> :type_scope:x_'='_x not
R43379:43381 Poly Exercises.Church exp def
R43389:43392 Poly Exercises.Church zero def
R43383:43387 Poly Exercises.Church three def
R43396:43398 Poly Exercises.Church one def
R43418:43420 Poly Exercises.Church exp def
R43423:43427 Poly Exercises.Church three def
R43430:43433 Poly Exercises.Church zero def
R43436:43438 Poly Exercises.Church one def
def 43468:43472 Exercises.Church exp_4
R43489:43491 Coq.Init.Logic <> :type_scope:x_'='_x not
R43476:43478 Poly Exercises.Church exp def
R43486:43488 Poly Exercises.Church one def
R43480:43484 Poly Exercises.Church three def
R43492:43496 Poly Exercises.Church three def
R43515:43517 Poly Exercises.Church exp def
R43520:43524 Poly Exercises.Church three def
R43527:43529 Poly Exercises.Church one def
R43532:43541 Poly Exercises.Church doit3times def
def 43571:43575 Exercises.Church exp_5
R43593:43595 Coq.Init.Logic <> :type_scope:x_'='_x not
R43579:43581 Poly Exercises.Church exp def
R43588:43592 Poly Exercises.Church three def
R43583:43586 Poly Exercises.Church zero def
R43596:43599 Poly Exercises.Church zero def
R43618:43620 Poly Exercises.Church exp def
R43623:43627 Poly Exercises.Church three def
R43630:43633 Poly Exercises.Church zero def
R43636:43638 Poly Exercises.Church one def
R43641:43650 Poly Exercises.Church doit3times def
R43653:43656 Poly Exercises.Church mult def
R43686:43691 Poly Exercises.Church <> mod
R43709:43717 Poly Exercises <> mod
